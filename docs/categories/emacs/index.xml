<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Emacs on 麦汁三昧</title>
    <link>https://mugijiru.github.io/categories/emacs/</link>
    <description>Recent content in Emacs on 麦汁三昧</description>
    <generator>Hugo</generator>
    <language>ja-JP</language>
    <lastBuildDate>Sun, 24 Nov 2024 01:20:00 +0900</lastBuildDate>
    <atom:link href="https://mugijiru.github.io/categories/emacs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>東京 Emacs 勉強会 秋フェス2024 に参加しました</title>
      <link>https://mugijiru.github.io/posts/tokyo-emacs-october-festival-2024/</link>
      <pubDate>Sun, 24 Nov 2024 01:20:00 +0900</pubDate>
      <guid>https://mugijiru.github.io/posts/tokyo-emacs-october-festival-2024/</guid>
      <description>&lt;p&gt;先日開催された &lt;a href=&#34;https://tokyo-emacs.connpass.com/event/330572/&#34;&gt;東京 Emacs 勉強会 秋フェス2024&lt;/a&gt; に参加して&#xA;&lt;a href=&#34;https://mugijiru.kibe.la/shared/entries/08a3195e-b85f-477f-bb85-a34bb08d3bbd&#34;&gt;私の Rails アプリケーション開発環境&lt;/a&gt; というタイトルで発表してきました。&lt;/p&gt;&#xA;&lt;p&gt;ま、私の発表とかはどうでも良いのでスルーして気になった発表について簡単に。&lt;/p&gt;</description>
    </item>
    <item>
      <title>プロジェクト固有の Hydra を使う</title>
      <link>https://mugijiru.github.io/posts/use-project-specific-hydra/</link>
      <pubDate>Sun, 16 Jun 2024 11:55:00 +0900</pubDate>
      <guid>https://mugijiru.github.io/posts/use-project-specific-hydra/</guid>
      <description>&lt;p&gt;普段 Rails のプロジェクトを触っているのでそれ用に projectile-rails のコマンドを叩けるようにするために&#xA;&lt;a href=&#34;https://mugijiru.github.io/.emacs.d/programming/rails/#%E3%82%AD%E3%83%BC%E3%83%90%E3%82%A4%E3%83%B3%E3%83%89&#34;&gt;projectile-rails 用の Hydra を定義&lt;/a&gt;している&lt;/p&gt;&#xA;&lt;p&gt;のですが Rails 以外のプロジェクトもあるし&#xA;Rails のプロジェクトでもここで定義しているのとは違う形のプロジェクトを触ることもあるのでプロジェクト毎に固有の Hydra が欲しいなって思ってちょっと対応してみた。&lt;/p&gt;</description>
    </item>
    <item>
      <title>org-mode の Custom Agenda Views の抽出条件を少し調整した</title>
      <link>https://mugijiru.github.io/posts/org-custom-agenda-views-filters/</link>
      <pubDate>Tue, 15 Aug 2023 23:03:00 +0900</pubDate>
      <guid>https://mugijiru.github.io/posts/org-custom-agenda-views-filters/</guid>
      <description>&lt;p&gt;しばらく使っていて、ここなんとかしたいな〜と思っていたところの一部をなんとかしたので記事に残しておく。&lt;/p&gt;&#xA;&lt;h2 id=&#34;heading-level-でのフィルタリング&#34;&gt;Heading Level でのフィルタリング&lt;/h2&gt;&#xA;&lt;p&gt;TODO タスクの中に更に TODO でサブタスクを生やしていると&#xA;agenda 表示をした時にそのサブタスクも全部表示されてうんざりしていたのが最近ようやく解決できた。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Emacs で動く Kibela クライアントを作ってる</title>
      <link>https://mugijiru.github.io/posts/introduction-kibela-el/</link>
      <pubDate>Sat, 18 Mar 2023 15:58:00 +0900</pubDate>
      <guid>https://mugijiru.github.io/posts/introduction-kibela-el/</guid>
      <description>&lt;p&gt;最近 Emacs 上で動く Kibela のクライアントを作り始めたからちょっと紹介してみる&lt;/p&gt;&#xA;&lt;h2 id=&#34;kibela-とは&#34;&gt;Kibela とは&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://kibe.la/&#34;&gt;Kibela&lt;/a&gt; は知識共有やドキュメント管理を目的とした SaaS 型のナレッジ管理ツールの一種。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kibela の記事を検索できる Ivy 拡張を作った</title>
      <link>https://mugijiru.github.io/posts/release-ivy-kibela/</link>
      <pubDate>Mon, 29 Aug 2022 09:53:00 +0900</pubDate>
      <guid>https://mugijiru.github.io/posts/release-ivy-kibela/</guid>
      <description>&lt;p&gt;Emacs の &lt;a href=&#34;https://github.com/abo-abo/swiper&#34;&gt;ivy&lt;/a&gt; を使って &lt;a href=&#34;https://kibe.la/&#34;&gt;Kibela&lt;/a&gt; の記事を検索できる拡張 &lt;a href=&#34;https://github.com/mugijiru/ivy-kibela&#34;&gt;ivy-kibela&lt;/a&gt; を作りました。&lt;/p&gt;&#xA;&lt;p&gt;まあ自分用に作っただけなので Melpa にも登録してなかったりと、ちゃんとしてない部分は色々ありますが。&lt;/p&gt;&#xA;&lt;h2 id=&#34;作った理由&#34;&gt;作った理由&lt;/h2&gt;&#xA;&lt;p&gt;現職では情報共有ツールとして Kibela を使っています。そして Kibela の記事を探したい時ってのは大体 Emacs でプログラムを書いている時なので&#xA;Emacs 内からさくっと検索できると便利だな〜と思って作りました。&lt;/p&gt;</description>
    </item>
    <item>
      <title>el-get-lock の情報を使ってパッケージの更新確認ができるようにした</title>
      <link>https://mugijiru.github.io/posts/check-updates-emacs-packages-with-el-get-lock/</link>
      <pubDate>Sun, 06 Mar 2022 23:36:00 +0900</pubDate>
      <guid>https://mugijiru.github.io/posts/check-updates-emacs-packages-with-el-get-lock/</guid>
      <description>&lt;p&gt;変なこだわりがあったり時代の波に乗れてなかったりで&#xA;use-package を使わずに el-get を使い続けている麦汁です。&lt;/p&gt;&#xA;&lt;p&gt;このところは &lt;a href=&#34;https://github.com/tarao/el-get-lock&#34;&gt;el-get-lock&lt;/a&gt; で今入れているバージョンがわかるようにしつつ定期的に el-get-update-all 的なことをしていました。そこもまあ非同期でまとめて更新処理がかかると変なことになるので適当なスクリプト組んでたけども。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Emacs のロックファイルと Webpack dev server の設定</title>
      <link>https://mugijiru.github.io/posts/configure-webpack-dev-server-with-emacs/</link>
      <pubDate>Thu, 16 Sep 2021 10:22:00 +0900</pubDate>
      <guid>https://mugijiru.github.io/posts/configure-webpack-dev-server-with-emacs/</guid>
      <description>&lt;p&gt;また同じ罠を踏んだ時に同じ対応ができるようにということでメモ。&lt;/p&gt;&#xA;&lt;p&gt;プライベートで vue-cli とかを使って&#xA;&lt;code&gt;npm run serve&lt;/code&gt; とかしている時にファイルを変更する度に&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[Error: ENOENT: no such file or directory, stat &amp;#39;/path/to/src/components/.#HelloWorld.vue&amp;#39;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とか怒られて辛かった。&#xA;Emacs のロックファイルである。&lt;/p&gt;</description>
    </item>
    <item>
      <title>key-chord を使って Sticky Shift を一部実現した</title>
      <link>https://mugijiru.github.io/posts/sticky-shift-with-key-chord/</link>
      <pubDate>Sun, 11 Jul 2021 13:42:00 +0900</pubDate>
      <guid>https://mugijiru.github.io/posts/sticky-shift-with-key-chord/</guid>
      <description>&lt;p&gt;Emacs 使っていると左手小指を酷使しますよね。&lt;/p&gt;&#xA;&lt;p&gt;まあそれはみんな分かり切ってるので、それぞれが色々な工夫で、左手小指を必要以上に使わないような対応をされていると思います。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ivy を使った自作コマンドなどをテストするようにした</title>
      <link>https://mugijiru.github.io/posts/testing-my-emacs-command/</link>
      <pubDate>Sun, 13 Jun 2021 15:18:00 +0900</pubDate>
      <guid>https://mugijiru.github.io/posts/testing-my-emacs-command/</guid>
      <description>&lt;p&gt;これまで Emacs Lisp のテストコードを書いてなかった。&lt;/p&gt;&#xA;&lt;p&gt;というのも、自分は特にパッケージを作ってるわけでもなく、設定ファイルを弄ってるだけなので動かなくなっても困るのは自分だけ、という状況なのでまあテストしなくてもいいかな、みたいな。&lt;/p&gt;</description>
    </item>
    <item>
      <title>org-todo を ivy で設定できるようにするパート2</title>
      <link>https://mugijiru.github.io/posts/set-org-todo-from-ivy-part2/</link>
      <pubDate>Thu, 10 Jun 2021 20:53:00 +0900</pubDate>
      <guid>https://mugijiru.github.io/posts/set-org-todo-from-ivy-part2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://mugijiru.github.io/posts/set-org-todo-from-ivy/&#34;&gt;org-todo を ivy で設定できるようにした&lt;/a&gt; という記事で&#xA;org-todo を ivy で設定できるようにしたつもりだったんですけど、ダメでした。&lt;/p&gt;&#xA;&lt;p&gt;何がダメだったかというと&#xA;&lt;code&gt;org-todo-keywords-for-agenda&lt;/code&gt; という変数を使ってるのがダメだった。&lt;/p&gt;</description>
    </item>
    <item>
      <title>org-agenda を活用し始めた</title>
      <link>https://mugijiru.github.io/posts/try-org-agenda/</link>
      <pubDate>Thu, 29 Apr 2021 19:03:00 +0900</pubDate>
      <guid>https://mugijiru.github.io/posts/try-org-agenda/</guid>
      <description>&lt;p&gt;昨年から org-mode をもっと活用していこうということで、&#xA;org-clock を使い始めたり org-pomodoro を導入したり org-habits を設定してみたりしている麦汁さんです。&lt;/p&gt;&#xA;&lt;p&gt;org-mode は機能が豊富過ぎてマジで何が出来るのか全貌を把握し切れてないのですが、そんな中で、やっぱり全然把握できてなくて使ってなかった機能の1つが org-agenda ってやつ。&lt;/p&gt;</description>
    </item>
    <item>
      <title>最近 org-pomodoro 使ってないことに気付いた</title>
      <link>https://mugijiru.github.io/posts/why-not-use-org-pomodoro/</link>
      <pubDate>Thu, 29 Apr 2021 18:03:00 +0900</pubDate>
      <guid>https://mugijiru.github.io/posts/why-not-use-org-pomodoro/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/marcinkoziej/org-pomodoro&#34;&gt;org-pomodoro&lt;/a&gt; って便利な org-mode の拡張があるんですよ。&#xA;org-clock とポモドーロテクニックを組み合わせて使える便利なやつ。&lt;/p&gt;&#xA;&lt;p&gt;デフォルト設定で話すと、何か TODO にカーソルを乗せてる状態で起動したらそいつが clock-in した上で25分のタイマーが動いて、&#xA;25分経過したら clock-out した上で、5分の休憩が挟まってその休憩終了時には「次のポモドーロ開始するかい?」みたいなのが出て来てそこでまた M-x org-pomodoro を叩いたらまた25分のタイマーが開始して……みたいなやつ。&lt;/p&gt;</description>
    </item>
    <item>
      <title>browse-at-remote を導入した</title>
      <link>https://mugijiru.github.io/posts/add-browse-at-remote/</link>
      <pubDate>Sat, 23 Jan 2021 23:18:00 +0900</pubDate>
      <guid>https://mugijiru.github.io/posts/add-browse-at-remote/</guid>
      <description>&lt;p&gt;仕事中、プルリクのレビューをする際に、「ここのコードがこんな感じになってるから〜」みたいな感じで既存コードへのリンクを張ることがちょくちょくある。&lt;/p&gt;</description>
    </item>
    <item>
      <title>org-todo を ivy で設定できるようにした</title>
      <link>https://mugijiru.github.io/posts/set-org-todo-from-ivy/</link>
      <pubDate>Sun, 31 May 2020 01:32:00 +0900</pubDate>
      <guid>https://mugijiru.github.io/posts/set-org-todo-from-ivy/</guid>
      <description>&lt;p&gt;posframe っていいですよね。いきなりタイトルと関係なさそうな単語出したけど。まあ ivy-posframe を使ってるので ivy を使うと posframe が使えて便利って話なんだけど。&lt;/p&gt;&#xA;&lt;p&gt;ところで話は若干変わって、&#xA;org-todo って実行するとウインドウが分割されてバッファが表示されてそこから選ぶ形になるじゃないですか。もしかしたら設定がちゃんとしてたりしたらならないのかもしれませんけど、とりあえず私の環境だとなるんですよ。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
